SELECT  
	DAY,
	IFNULL(MAX(HOST_1), ' ') HOST_1,
	IFNULL(MAX(HOST_ROLE_1), ' ') HOST_ROLE_1,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_1), 5), ' ') BACKUP_SIZE_GB_1,
	IFNULL(MAX(HOST_2), ' ') HOST_2,
	IFNULL(MAX(HOST_ROLE_2), ' ') HOST_ROLE_2,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_2), 5), ' ') BACKUP_SIZE_GB_2,
	IFNULL(MAX(HOST_3), ' ') HOST_3,
	IFNULL(MAX(HOST_ROLE_3), ' ') HOST_ROLE_3,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_3), 5), ' ') BACKUP_SIZE_GB_3,
	IFNULL(MAX(HOST_4), ' ') HOST_4,
	IFNULL(MAX(HOST_ROLE_4), ' ') HOST_ROLE_4,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_4), 5), ' ') BACKUP_SIZE_GB_4,
	IFNULL(MAX(HOST_5), ' ') HOST_5,
	IFNULL(MAX(HOST_ROLE_5), ' ') HOST_ROLE_5,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_5), 5), ' ') BACKUP_SIZE_GB_5,
	IFNULL(MAX(HOST_6), ' ') HOST_6,
	IFNULL(MAX(HOST_ROLE_6), ' ') HOST_ROLE_6,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_6), 5), ' ') BACKUP_SIZE_GB_6,
	IFNULL(MAX(HOST_7), ' ') HOST_7,
	IFNULL(MAX(HOST_ROLE_7), ' ') HOST_ROLE_7,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_7), 5), ' ') BACKUP_SIZE_GB_7,
	IFNULL(MAX(HOST_8), ' ') HOST_8,
	IFNULL(MAX(HOST_ROLE_8), ' ') HOST_ROLE_8,
	IFNULL(LPAD(MAX(BACKUP_SIZE_GB_8), 5), ' ') BACKUP_SIZE_GB_8
FROM
	(SELECT 
		DAY,
		NTH_VALUE(HOST, 1) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_1,
		NTH_VALUE(HOST_ROLE, 1) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_1,
		NTH_VALUE(BACKUP_SIZE_GB, 1) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_1,
		NTH_VALUE(HOST, 2) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_2,
		NTH_VALUE(HOST_ROLE, 2) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_2,
		NTH_VALUE(BACKUP_SIZE_GB, 2) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_2,
		NTH_VALUE(HOST, 3) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_3,
		NTH_VALUE(HOST_ROLE, 3) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_3,
		NTH_VALUE(BACKUP_SIZE_GB, 3) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_3,
		NTH_VALUE(HOST, 4) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_4,
		NTH_VALUE(HOST_ROLE, 4) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_4,
		NTH_VALUE(BACKUP_SIZE_GB, 4) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_4,
		NTH_VALUE(HOST, 5) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_5,
		NTH_VALUE(HOST_ROLE, 5) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_5,
		NTH_VALUE(BACKUP_SIZE_GB, 5) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_5,
		NTH_VALUE(HOST, 6) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_6,
		NTH_VALUE(HOST_ROLE, 6) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_6,
		NTH_VALUE(BACKUP_SIZE_GB, 6) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_6,
		NTH_VALUE(HOST, 7) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_7,
		NTH_VALUE(HOST_ROLE, 7) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_7,
		NTH_VALUE(BACKUP_SIZE_GB, 7) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_7,
		NTH_VALUE(HOST, 8) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_8,
		NTH_VALUE(HOST_ROLE, 8) OVER (PARTITION BY DAY ORDER BY HOST ) HOST_ROLE_8,
		NTH_VALUE(BACKUP_SIZE_GB, 8) OVER (PARTITION BY DAY ORDER BY HOST ) BACKUP_SIZE_GB_8
	FROM
		(SELECT 
			DAY,
			HOST,
			INDEXSERVER_ACTUAL_ROLE AS HOST_ROLE,
			BACKUP_SIZE_GB
		FROM 
			(SELECT	
				BACKUP_ID,
				TO_CHAR(SYS_START_TIME,'YYYY/MM/DD') AS DAY,
				TO_CHAR(ADD_DAYS(SYS_START_TIME,1),'YYYY/MM/DD') AS DAY_PLUS_ONE,
				STATE_NAME,
				ENTRY_TYPE_NAME
			FROM M_BACKUP_CATALOG 
			WHERE 
				ENTRY_TYPE_NAME = 'complete data backup' AND 
				STATE_NAME = 'successful' /*Only successful data backup will be calculated*/
			) C
			JOIN 
			(SELECT 
				BACKUP_ID,
				MF.HOST,
				INDEXSERVER_ACTUAL_ROLE,
				ROUND(SUM(BACKUP_SIZE/1024/1024/1024),2) AS BACKUP_SIZE_GB
			FROM 
				M_BACKUP_CATALOG_FILES MF JOIN M_LANDSCAPE_HOST_CONFIGURATION HC
				ON MF.HOST = HC.HOST 	/*Add host role*/
			GROUP BY 
				MF.HOST,
				INDEXSERVER_ACTUAL_ROLE,
				BACKUP_ID
			) F
			ON C.BACKUP_ID = F.BACKUP_ID 
		WHERE
			DAY_PLUS_ONE = TO_CHAR(current_date,'YYYY/MM/DD') 
		)
	GROUP BY 
		DAY	,
		BACKUP_SIZE_GB,
		HOST,
		HOST_ROLE
	)
GROUP BY DAY

